BotNet API — 1.1

Концепция
Робот — это динамическая система, регулятор для приведения её в нужное состояние и средство связи с системой. Состояние робота описывается вектором состояния. По договоренности, вектор состояния может содержать NaN - отсутствие значения. Каждое устройство интерпретирует пустое значение самостоятельно, оно пересылается без изменений.
В асинхронном режиме робот отправляет свой вектор состояния на сервер, а сервер пересылает ему векторы желаемого состояния и некоторые команды. Всё взаимодействие осуществляется через WebSocket и JSON. Для начала взаимодействия роботу требуется описать себя. Сервер должен ответить кодом ошибки (код ошибки 0 соответствует успешной регистрации).
У всех роботов есть два логических параметра: logging и controlling. Первый говорит, будет ли робот отсылать своё состояние на сервер, а второй говорит, будет ли робот использовать регулятор.
У любого робота можно сбросить состояние. Реализация зависит от конкретного устройства, но обычно это - смена вектора состояния на вектор по умолчанию (например, координата [0, 0, 0]).

Регистрация
Пример запроса на регистрацию от сегвея
    {"type":"connect", "name":"Gregor's segway", "vector_format": ["x","z", "beta", "psi"], "coefficients_format":["KteetaT", "psiMax", "Krot", "rotMax", "tp"], "GUI_format": {"model": "segway", "size": 3}}
Пример запроса на регистрацию от манипулятора
    {"type":"connect", "name":"Alex's manipulator", "vector_format": ["x","y","z","teta1","teta2","teta3"], "coefficients_format":["kp","ki","kd"], "GUI_format": {"model": "manipulator", "a1":1, "a2": 0.5, "a3": 0.6}}
здесь
    type - тип сообщения
    name - имя робота для дальшейшей идентификации
    vector_format - имена параметров вектора состояния
    coefficients_format - имена параметров регулятора
    GUI_format - параметры для визуализации
        model - название класса графической модели
        ОСТАЛЬНОЕ - константы модели
Пример ответа сервера
    {"type":"connect_answer","code": 0}
здесь
    type - тип сообщения
    code - код ошибки
        0 - успешная регистрация
        ОСТАЛЬНОЕ - неудача

Обмен векторами состояния
И сервер, и робот отправляют векторы состояния. Ответ на них не ожидается. Формат:
    {"type": "vector", "t": 1.567, "vector": [15, 75, 2]}
здесь
    type - тип сообщения
    t - момент времени от начала работы
    vector - вектор состояния. Каждому числу соответствует параметр из списка vector_format

Команды управления от сервера
Ответ на команды отсылать не нужно
переключение логирования
    {"type": "set_logging", "value": 1}
переключение управления
    {"type": "set_controlling", "value": 0}
здесь
    type - тип сообщения
    value - числовое значение (1 - да, 0 - нет)
сброс состояния робота
    {"type": "clear"}